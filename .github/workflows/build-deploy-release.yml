name: Release - Build and Deploy

on:
  push:
   branches:
    - 'feature/IOS-8508_create_release_ci_cd' # TODO: Replace with release*
  workflow_dispatch:
    inputs:
      build_description:
        description: >
          Optional additional info about the build
        type: string
      xcode_version_override:
        description: >
          Optional Xcode version override. Leave blank (default value) to use the default Xcode version; 
          pass a custom value (e.g. '16.0', '10.2.1', '11 Beta 7', '11.2 GM seed', etc) to use a different Xcode version for the build
        type: string

concurrency:
  group: '${{ github.workflow }} (${{ github.head_ref || github.ref_name }})'
  cancel-in-progress: true

jobs:
  prepare:
    name: Prepare information
    runs-on: ubuntu-latest
    outputs:
      stage: 'RC'
      version: '5.19' # TODO: Test only, remove this constant
      build_number: '1022'  # TODO: Obtain the next appstore build number
    steps:
      - name: Test
        id: test
        run: |
          echo '${{ vars.APP_NAME }}'
          echo "result=1" >> $GITHUB_OUTPUT

  build:
    name: Tangem Release
    needs: prepare
    uses: tangem/actions/.github/workflows/build.yml@feature/IOS-8508_create_release_ci_cd  # TODO: Test only, switch to main
    with:
      stage: '${{ needs.prepare.outputs.stage }}'
      version: '${{ needs.prepare.outputs.version }}'
      build_number: '${{ needs.prepare.outputs.build_number }}'
      path: 'fastlane/builds/'
      filename: 'Tangem-${{ needs.prepare.outputs.stage }}-${{ needs.prepare.outputs.version }}(${{ needs.prepare.outputs.build_number }}).ipa'
      xcode_version_override: '${{ inputs.xcode_version_override }}'
    secrets:
      GH_MOBILE_PAT: '${{ secrets.GH_MOBILE_PAT }}'

  deploy:
    name: Tangem Release TestFlight
    needs: [prepare, build]
    uses: tangem/actions/.github/workflows/deploy-testflight.yml@feature/IOS-8508_create_release_ci_cd  # TODO: Test only, switch to main
    with:
      stage: 'RC'
      version: ${{ github.event.inputs.versionName }}
      build_number: ${{ github.run_number }}
      changelog: '${{ inputs.build_description }}'
      filename: 'Tangem-RC-${{ github.event.inputs.versionName }}(${{ github.run_number }}).ipa'
    secrets:
      ASC_KEY_ID: ${{ secrets.ASC_KEY_ID}}
      ASC_PRIVATE_KEY: ${{ secrets.ASC_PRIVATE_KEY}}
      ASC_ISSUER_ID: ${{ secrets.ASC_ISSUER_ID}}
      GH_MOBILE_PAT: ${{ secrets.GH_MOBILE_PAT}}

  notification:
    name: Deploy Notification
    if: false  # TODO: Test only, remove
    uses: tangem/actions/.github/workflows/notification.yml@feature/IOS-8508_create_release_ci_cd # TODO: Test only, switch to main
    needs:
      - prepare
      - build
      - deploy
    with:
      channel: '${{ vars.SLACK_CHANNEL_DEPLOYMENTS_IOS }}'
      status: 'success'
      app_name: '${{ vars.APP_BETA }}'
      deploy_to: '${{ vars.DEPLOYMENT_GOOGLE_DISTRIBUTION }}'
      version: '${{ needs.prepare.outputs.version }}'
      build_number: '${{ needs.prepare.outputs.build_number }}'
      changelog: '${{ needs.prepare.outputs.jira-issues-summary }}'
      build_description: '${{ inputs.build_description }}'
      encoded_release_url: '${{ needs.deploy.outputs.encoded_release_url }}'
    secrets:
      SLACK_BOT_TOKEN: '${{ secrets.SLACK_BOT_TOKEN }}'

  error_notification:
    name: Error Notification
    if: false  # TODO: Test only, remove
    #if: failure()
    uses: tangem/actions/.github/workflows/notification.yml@feature/IOS-8508_create_release_ci_cd # TODO: Test only, switch to main
    needs:
      - prepare
      - build
    with:
      channel: '${{ vars.SLACK_CHANNEL_DEPLOYMENTS_IOS }}'
      status: 'error'
      app_name: '${{ vars.APP_BETA }}'
      deploy_to: '${{ vars.DEPLOYMENT_GOOGLE_DISTRIBUTION }}'
      version: '${{ needs.prepare.outputs.version }}'
      build_number: '${{ needs.prepare.outputs.build_number }}'
      changelog: '${{ needs.prepare.outputs.jira-issues-summary }}'
    secrets:
      SLACK_BOT_TOKEN: '${{ secrets.SLACK_BOT_TOKEN }}'
